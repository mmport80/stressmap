function init(){

	
	//******************************************************************
	//******************************************************************
	
	
	
	//labels for each equity shock
	svgContainer	.append("g")
			.attr("id", "Equity Shock Labels" )
			.selectAll(".eqShocks")
			.data(eqShocks)
			.enter()
			.append("text")             
			.attr("transform", "translate("+(0)+","+(margin.top)+")")
			.text(function (d) { return d; })
			.attr("dy", "-.4em")
			.attr("x", 0)
                	.attr("y", function (d) { return y(d); });
        
        //label for equity shock axis
        svgContainer	.append("text")     
			.text("Equity Price % Shock")
			.attr("x", 0)
                	.attr("y", margin.top);
                	
	//labels for each vol shock
	svgContainer	.append("g")          
			.attr("id", "Vol Shock Labels" )
			.selectAll(".volShocks")
			.data(volShocks)
			.enter()
			.append("text")             
			.attr("transform", "translate("+(margin.left)+","+(margin.top)+")")
			.text(function (d) { return d; })
			.attr("x", function (d) { return x(d); })
                	.attr("y", height+margin.top);
	
	//label for vol shock axis
	svgContainer	.append("text")     
			.text("Equity Volatility % Shock")
			.attr("x", width-75)
                	.attr("y", height+margin.top+margin.bottom+10);
	
	//read position data from csv
	d3.csv("test_data/butterfly_spread.csv", function(error, positions) {
		positions.forEach(function(position){
			var vd = new Date(position.vDate+" UTC");
			var ed = new Date(position.eDate+" UTC");
			
			//add concurrency for each individual position
			if (position.exposure == 'option') {
				
				pos = new Option(+position.quantity,vd,+position.strike,ed,position.putOrCall,+position.stockPrice,+position.mktV,+position.divYield,+position.intRate);
				
				var promise = wait();
				promise.done(pos.getAnalyticalResults(shocks));
			       	
				/*
				pos = new Option(+position.quantity,vd,+position.strike,ed,position.putOrCall,+position.stockPrice,+position.mktV,+position.divYield,+position.intRate);
				pos.getAnalyticalResults(shocks);
				*/
				}
			else if (position.exposure == 'equity')  {
				pos = new Equity(+position.quantity,+position.stockPrice,+position.mktV);
				pos.getAnalyticalResults(shocks);
				}
			});
		});
		
	
	//******************************************************************
	//******************************************************************
	
	var circles = svgContainer	.append("g")
					.attr("id", "Circles" )
					.selectAll("circle");
	
	//read historical stress scenarios from the csv
	//
	d3.csv("test_data/historical_stress_scenarios.csv", 
		function(d) {
			return { volShock:d.volShock, eqShock:d.eqShock, description:d.description, start_date:d.start_date, end_date:d.end_date };
			},
		function(error,data3){
			var data2 = circles	.data(data3)
						.enter()
						.append("circle");
	
			data2
				//tweaked in order to align with axes	
				.attr("transform", "translate("+(margin.left)+","+(0)+")")
				.attr("cx", function (d) { return x(+d.volShock);	})
				.attr("cy", function (d) { return y(+d.eqShock);	})
				.attr("r", 10)
				.append("title")
				.text(function(d) { return d.description+" ("+d.start_date+"-"+d.end_date + ")"});
			}
		);
	
	
	//******************************************************************
	//******************************************************************
	//Legend
	
	//black square
	
	svgContainer	.append("g")       
			.attr("id", "Black Square Legend" )
			.attr("transform", "translate("+(30)+","+(height + margin.top + 60)+")")
			.append("rect")
			.attr("width", 20)
			.attr("height", 20)
			.attr("rx", 1)
      			.attr("ry", 1)
      			.style("stroke","red");
      			
      	svgContainer	.append("text")     
      			.text("Institutional collapse magnitude loss")
			.attr("x", margin.left+20)
                	.attr("y", height+margin.top+margin.bottom+45);
	
	//red square
	
	svgContainer	.append("g")           
			.attr("id", "Red Square Legend" )
			.attr("transform", "translate("+(30)+","+(height + margin.top + 90)+")")
			.append("rect")
			.attr("width", 20)
			.attr("height", 20)
			.attr("rx", 1)
      			.attr("ry", 1)
      			.style("stroke","black");
      			
      	svgContainer	.append("text")     
      			.text("Safety")
			.attr("x", margin.left+20)
                	.attr("y", height+margin.top+margin.bottom+73);
	
	//blue circle
	
	svgContainer	.append("g")           
			.attr("id", "Blue Circle Legend" )
			.attr("transform", "translate("+(30)+","+(height + margin.top + 120)+")")
			.append("circle")
			.attr("cx", 10)
			.attr("cy", 10)
			.attr("r", 10);
      			
      	svgContainer	.append("text")     
      			.text("Historical stress event")
			.attr("x", margin.left+20)
                	.attr("y", height+margin.top+margin.bottom+103);
	}
	
	
	
//******************************************************************
//******************************************************************
//append PL data to chart
function appendData(pL){
	var data = squares.data(pL)
			.enter()
			.append("rect");
				
	data	.attr("transform", "translate("+(margin.left)+","+(0)+")")
		.attr("x", function (d) { return x(d.x); })
		.attr("y", function (d) { return y(d.y); })
		.attr("width", 20)
		.attr("height", 20)
		.attr("rx", 1)
		.attr("ry", 1)
		//add to css
		.style("stroke", function (d) { 
						if (d.pl > threshold) {
							return "black";
							}
						else if (d.pl < threshold) {
							return "red";
							}
						else {
							return "white";
							}
						}
			)
		.append("title")
		.text(function(d) { return "Vol Shock " + d.x + ", Equity Shock " + d.y + "; PL " + d.pl });
		
	//data.exit();
	
	
	
      }


function wait() {
	  var deferred = $.Deferred();

	  setTimeout(function() {
	    deferred.resolve();
	  }, 2000);

	  return deferred.promise();
	}

function result() {
 	 $('#result').html('done');
	}
